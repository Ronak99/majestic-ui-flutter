[
  {
    "name": "avatar",
    "files": [
      {
        "name": "majestic_avatar.dart",
        "dir": "majestic/ui/avatar",
        "content": "import 'dart:math';\n\nimport 'package:cached_network_image/cached_network_image.dart';\nimport 'package:flutter/material.dart';\n\nclass MajesticAvatar extends StatefulWidget {\n  final String? src;\n  final double radius;\n  final String? text;\n  final TextStyle? textStyle;\n  final Color? background;\n  final double? height;\n  final double? width;\n  final BoxFit fit;\n  final bool isRound;\n  final bool useOldImageOnUrlChange;\n\n  const MajesticAvatar(\n    this.src, {\n    super.key,\n    this.isRound = false,\n    this.radius = 0,\n    this.height,\n    this.width,\n    this.fit = BoxFit.cover,\n    this.useOldImageOnUrlChange = false,\n    this.text,\n    this.textStyle,\n    this.background,\n  });\n\n  @override\n  State<MajesticAvatar> createState() => _CachedImageState();\n}\n\nclass _CachedImageState extends State<MajesticAvatar> {\n  Color? _color;\n\n  @override\n  void initState() {\n    super.initState();\n    _color = widget.background ?? _generateRandomColor();\n  }\n\n  Widget _baseBackground(String? text) {\n    return Container(\n      decoration: BoxDecoration(\n        shape: widget.isRound ? BoxShape.circle : BoxShape.rectangle,\n        color: _color,\n      ),\n      height: widget.height,\n      width: widget.width,\n      alignment: Alignment.center,\n      child: text != null\n          ? LayoutBuilder(\n              builder: (context, constraints) {\n                double fontSize =\n                    min(constraints.maxWidth, constraints.maxHeight) * 0.5;\n                return Text(\n                  text[0].toUpperCase(),\n                  style: TextStyle(\n                    fontSize: fontSize,\n                    fontWeight: FontWeight.w500,\n                    color: _color!.computeLuminance() > .5\n                        ? Colors.black\n                        : Colors.white,\n                  ),\n                );\n              },\n            )\n          : const SizedBox.shrink(),\n    );\n  }\n\n  Widget _getChild() {\n    if (widget.src == null) {\n      return _baseBackground(widget.text);\n    }\n    return CachedNetworkImage(\n      imageUrl: widget.src!,\n      fit: widget.fit,\n      useOldImageOnUrlChange: widget.useOldImageOnUrlChange,\n      placeholder: (context, url) => _baseBackground(widget.text),\n      errorWidget: (context, url, error) {\n        print(error);\n        return Container(\n          height: widget.height,\n          width: widget.width,\n          color: Colors.black,\n        );\n      },\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return SizedBox(\n      height: widget.height,\n      width: widget.width,\n      child: ClipRRect(\n        borderRadius: widget.isRound\n            ? BorderRadius.circular(300)\n            : BorderRadius.circular(widget.radius),\n        child: _getChild(),\n      ),\n    );\n  }\n}\n\nColor _generateRandomColor() {\n  return Color.fromARGB(\n    255,\n    Random().nextInt(256),\n    Random().nextInt(256),\n    Random().nextInt(256),\n  );\n}\n"
      }
    ],
    "type": "ui",
    "dependencies": ["cached_network_image", "provider", "flutter_bloc"]
  }
]
