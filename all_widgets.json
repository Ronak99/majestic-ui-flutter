[
  {
    "name": "star_rush_background",
    "label": "Star Rush Background",
    "description": "Beautiful package to elevate your app.",
    "files": [
      {
        "name": "star_rush_background.dart",
        "dir": "lib/majestic/ui",
        "content": "import 'dart:async';\nimport 'dart:math';\nimport 'dart:ui';\n\nimport 'package:flutter/material.dart';\n\nclass StarRushBackground extends StatefulWidget {\n  /// speed must be in range: 0 to 1000\n  final double speed;\n  final double starSpeed;\n\n  const StarRushBackground({\n    super.key,\n    required this.speed,\n  }) : starSpeed = speed / 1000;\n\n  @override\n  State<StarRushBackground> createState() => _RushingStarsViewState();\n}\n\nclass _RushingStarsViewState extends State<StarRushBackground> {\n  Timer? timer;\n  List<Star> stars = [];\n  int numStars = 500;\n\n  @override\n  void initState() {\n    super.initState();\n\n    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {\n      final double height = MediaQuery.of(context).size.height;\n      final double width = MediaQuery.of(context).size.width;\n\n      while (stars.length < numStars) {\n        stars.add(\n          Star(\n            x: StarsUtils.range(0, width),\n            y: StarsUtils.range(0, height),\n            canvasHeight: height,\n            canvasWidth: width,\n          ),\n        );\n      }\n\n      // refresh rate of 60\n      const duration = Duration(milliseconds: 1000 ~/ 60);\n      timer = Timer.periodic(duration, (timer) {\n        _logic(height, width);\n      });\n    });\n  }\n\n  _logic(height, width) {\n    stars = stars.where((star) {\n      star.update(widget.starSpeed);\n      return star.isActive();\n    }).toList();\n\n    while (stars.length < numStars) {\n      stars.add(\n        Star(\n          x: StarsUtils.range(0, width),\n          y: StarsUtils.range(0, height),\n          canvasHeight: height,\n          canvasWidth: width,\n        ),\n      );\n    }\n\n    if (mounted) {\n      setState(() {});\n    }\n  }\n\n  @override\n  void dispose() {\n    timer?.cancel();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return CustomPaint(\n      painter: StarPainter(stars: stars),\n    );\n  }\n}\n\nclass Star {\n  Offset pos, prevPos, vel;\n  double ang;\n  double canvasHeight;\n  double canvasWidth;\n  Color color;\n  double radius;\n\n  Star({\n    required double x,\n    required double y,\n    required this.canvasHeight,\n    required this.canvasWidth,\n  })  : color = StarsUtils.generateRandomColor(),\n        radius = StarsUtils.range(2, 6),\n        pos = Offset(x, y),\n        prevPos = Offset(x, y),\n        vel = Offset.zero,\n        ang = atan2(y - (canvasHeight / 2.5), x - (canvasWidth / 2));\n\n  bool isActive() =>\n      pos.dx >= 0 &&\n      pos.dx <= canvasWidth &&\n      pos.dy >= 0 &&\n      pos.dy <= canvasHeight;\n\n  void update(double acc) {\n    vel += Offset(cos(ang) * acc, sin(ang) * acc);\n    prevPos = pos;\n    pos += vel;\n  }\n\n  void draw(Canvas canvas) {\n    final alpha = lerpDouble(0, 255, vel.distance / 3)!;\n\n    final paint = Paint()\n      ..color =\n          alpha >= 0 && alpha <= 255 ? color.withOpacity(alpha / 255) : color\n      ..strokeWidth = radius\n      ..strokeCap = StrokeCap.round;\n    canvas.drawLine(pos, prevPos, paint);\n  }\n}\n\nclass StarsUtils {\n  static final random = Random();\n\n  static bool getRandomBool() => random.nextBool();\n\n  static Color generateRandomColor() {\n    int red = random.nextInt(156) + 100;\n    int green = random.nextInt(156) + 100;\n    int blue = random.nextInt(156) + 100;\n\n    return Color.fromARGB(\n      255,\n      red,\n      green,\n      blue,\n    );\n  }\n\n  static double range(double min, double max) =>\n      random.nextDouble() * (max - min) + min;\n}\n\nclass StarPainter extends CustomPainter {\n  List<Star> stars;\n  StarPainter({required this.stars});\n\n  @override\n  void paint(Canvas canvas, Size size) {\n    // draw the stars\n    for (var s in stars) {\n      s.draw(canvas);\n    }\n  }\n\n  @override\n  bool shouldRepaint(covariant CustomPainter oldDelegate) {\n    return true;\n  }\n}\n"
      }
    ],
    "dependencies": [],
    "type": "widget",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99",
    "demo": "import 'package:flutter/material.dart';\n\nimport 'majestic/ui/star_rush_background.dart';\n\nclass StarRushBackgroundDemo extends StatelessWidget {\n  const StarRushBackgroundDemo({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const Scaffold(\n      body: StarRushBackground(\n        speed: 5,\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "animated_button",
    "label": "Animated Button",
    "description": "Beautiful animated button.",
    "files": [
      {
        "name": "animated_button.dart",
        "dir": "lib/majestic/ui",
        "content": "import 'package:flutter/material.dart';\nimport 'package:mesh_gradient/mesh_gradient.dart';\n\nclass AnimationOptions {\n  final double frequency;\n  final double amplitude;\n  final double speed;\n  final double grain;\n\n  const AnimationOptions({\n    this.frequency = 5,\n    this.amplitude = 30,\n    this.speed = 2,\n    this.grain = 0,\n  })  : assert(grain >= 0 && grain <= 1),\n        assert(speed >= 0.01 && speed <= 15);\n\n  factory AnimationOptions.subtle() {\n    return const AnimationOptions(\n      frequency: 3,\n      amplitude: 15,\n      speed: 1,\n      grain: 0.2,\n    );\n  }\n\n  // Dramatic animation preset\n  factory AnimationOptions.dramatic() {\n    return const AnimationOptions(\n      frequency: 8,\n      amplitude: 45,\n      speed: 4,\n      grain: 0.5,\n    );\n  }\n}\n\nclass MajesticAnimatedButton extends StatelessWidget {\n  final dynamic child;\n  final VoidCallback onPressed;\n  final EdgeInsets padding;\n  final BorderRadiusGeometry borderRadius;\n  final List<Color>? colors;\n  final AnimationOptions options;\n\n  const MajesticAnimatedButton({\n    super.key,\n    required this.child,\n    this.padding = const EdgeInsets.symmetric(horizontal: 18, vertical: 6),\n    this.borderRadius = const BorderRadius.all(Radius.circular(100)),\n    this.colors,\n    this.options = const AnimationOptions(),\n    required this.onPressed,\n  }) : assert(child is Widget || child is String);\n\n  @override\n  Widget build(BuildContext context) {\n    return FittedBox(\n      child: GestureDetector(\n        onTap: onPressed,\n        child: ClipRRect(\n          borderRadius: borderRadius,\n          child: AnimatedMeshGradient(\n            colors: colors != null && colors!.isNotEmpty\n                ? colors!\n                : const [\n                    Colors.pink,\n                    Colors.blueAccent,\n                    Color.fromARGB(255, 199, 6, 6),\n                    Colors.purple\n                  ],\n            options: AnimatedMeshGradientOptions(\n              speed: options.speed,\n              amplitude: options.amplitude,\n              frequency: options.frequency,\n              grain: options.grain,\n            ),\n            child: Container(\n              padding: padding,\n              alignment: Alignment.center,\n              child: child is String\n                  ? Text(\n                      child,\n                      style: const TextStyle(\n                        color: Colors.white,\n                        fontWeight: FontWeight.w600,\n                        fontSize: 15,\n                      ),\n                    )\n                  : child,\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
      }
    ],
    "dependencies": [
      "mesh_gradient"
    ],
    "type": "widget",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99",
    "demo": "import 'package:flutter/material.dart';\n\nimport 'majestic/ui/animated_button.dart';\n\nclass AnimatedButtonDemo extends StatelessWidget {\n  const AnimatedButtonDemo({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Center(\n        child: MajesticAnimatedButton(\n          child: const Icon(\n            Icons.person,\n            color: Colors.white,\n          ),\n          onPressed: () {},\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "auth_page",
    "label": "Auth Page",
    "description": "Authenticate your users in style.",
    "files": [
      {
        "name": "colors.dart",
        "dir": "lib/majestic/ui/auth_page",
        "content": "import 'dart:ui';\n\nconst themeAccentColor = Color(0xffF04F5F);\nconst mutedForegroundColor = Color(0xffD4D4D4);\n"
      },
      {
        "name": "auth_page.dart",
        "dir": "lib/majestic/ui/auth_page",
        "content": "import 'package:auth_page/colors.dart';\nimport 'package:flutter/material.dart';\n\nclass AuthPage extends StatelessWidget {\n  const AuthPage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: SizedBox(\n        width: double.infinity,\n        child: Column(\n          children: [\n            Container(\n              padding: const EdgeInsets.symmetric(horizontal: 32),\n              height: MediaQuery.of(context).size.height * .45,\n              decoration: const BoxDecoration(\n                gradient: LinearGradient(\n                  colors: [\n                    Color(0xffD9313E),\n                    Color(0xffA72734),\n                  ],\n                ),\n              ),\n              child: Column(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  Image.network(\n                    'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/logo-small.png',\n                    height: 75,\n                    width: 75,\n                    fit: BoxFit.cover,\n                  ),\n                  const SizedBox(height: 12),\n                  const Text(\n                    'Majestic UI',\n                    style: TextStyle(\n                      color: Colors.white,\n                      fontWeight: FontWeight.w600,\n                      fontSize: 32,\n                    ),\n                  ),\n                  const SizedBox(height: 8),\n                  const Text(\n                    'Beautifully designed Flutter widgets that you can copy and paste into your apps.',\n                    textAlign: TextAlign.center,\n                    style: TextStyle(\n                      color: Colors.white70,\n                      fontWeight: FontWeight.w400,\n                      fontSize: 14,\n                    ),\n                  ),\n                ],\n              ),\n            ),\n            Flexible(\n              child: Padding(\n                padding:\n                    const EdgeInsets.symmetric(horizontal: 32, vertical: 24),\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                  children: [\n                    const Text(\n                      'India\\'s #1 Food Delivery and Dining App',\n                      textAlign: TextAlign.center,\n                      style: TextStyle(\n                        color: Colors.black,\n                        fontWeight: FontWeight.w800,\n                        fontSize: 28,\n                      ),\n                    ),\n                    const SectionSeparator(text: 'Log in or sign up'),\n                    Column(\n                      children: [\n                        Container(\n                          decoration: BoxDecoration(\n                            color: Colors.white,\n                            borderRadius: BorderRadius.circular(12),\n                            boxShadow: const [\n                              BoxShadow(\n                                color: Colors.black12,\n                                blurRadius: 2,\n                                offset: Offset.zero,\n                              ),\n                            ],\n                          ),\n                          child: const TextField(\n                            decoration: InputDecoration(\n                              border: InputBorder.none,\n                              hintText: \"Enter your phone number\",\n                              hintStyle: TextStyle(\n                                fontWeight: FontWeight.w500,\n                                color: Colors.black45,\n                              ),\n                            ),\n                          ),\n                        ),\n                        const SizedBox(height: 12),\n                        Container(\n                          decoration: BoxDecoration(\n                            color: themeAccentColor,\n                            borderRadius: BorderRadius.circular(12),\n                          ),\n                          padding: const EdgeInsets.symmetric(vertical: 6),\n                          alignment: Alignment.center,\n                          child: const Text(\n                            \"Continue\",\n                            style: TextStyle(\n                              color: Colors.white,\n                              fontWeight: FontWeight.w600,\n                              fontSize: 18,\n                            ),\n                          ),\n                        ),\n                      ],\n                    ),\n                    const SectionSeparator(text: \"or\"),\n                    const Row(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        OAuthButton(\n                          child: Text('G'),\n                        ),\n                        SizedBox(width: 8),\n                        OAuthButton(\n                          child: Text('E'),\n                        )\n                      ],\n                    ),\n                    const Column(\n                      mainAxisSize: MainAxisSize.min,\n                      children: [\n                        Text('By continuing you agree to our'),\n                        Text('Terms of Service Privacy Policy Content Policy'),\n                      ],\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass OAuthButton extends StatelessWidget {\n  final Widget child;\n  const OAuthButton({super.key, required this.child});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        shape: BoxShape.circle,\n        border: Border.all(\n          color: Colors.black26,\n          width: .5,\n        ),\n      ),\n      alignment: Alignment.center,\n      height: 55,\n      width: 55,\n      child: child,\n    );\n  }\n}\n\nclass SectionSeparator extends StatelessWidget {\n  final String text;\n\n  const SectionSeparator({super.key, required this.text});\n\n  _separator() {\n    return Expanded(\n      child: Container(\n        height: .5,\n        color: Colors.black26,\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: const EdgeInsets.symmetric(vertical: 20),\n      child: Row(\n        children: [\n          _separator(),\n          Container(\n            margin: const EdgeInsets.symmetric(horizontal: 8),\n            child: Text(\n              text,\n              style: const TextStyle(\n                fontSize: 14,\n                color: Colors.black87,\n                fontWeight: FontWeight.w400,\n              ),\n            ),\n          ),\n          _separator(),\n        ],\n      ),\n    );\n  }\n}\n"
      }
    ],
    "dependencies": [],
    "type": "page",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99"
  },
  {
    "name": "grid_background",
    "label": "Grid Background",
    "description": "Beautiful animated grid background inspired by CRED.",
    "files": [
      {
        "name": "shimmer.dart",
        "dir": "lib/majestic/ui/grid_background",
        "content": "///\n/// A package provides an easy way to add shimmer effect to Flutter application\n/// The credit to this code goes to: hunghd.dev (https://pub.dev/publishers/hunghd.dev/packages)\n/// Package: https://pub.dev/packages/shimmer\n///\n\nlibrary shimmer;\n\nimport 'dart:developer';\n\nimport 'package:flutter/material.dart';\nimport 'package:flutter/rendering.dart';\n\n///\n/// An enum defines all supported directions of shimmer effect\n///\n/// * [ShimmerDirection.ltr] left to right direction\n/// * [ShimmerDirection.rtl] right to left direction\n/// * [ShimmerDirection.ttb] top to bottom direction\n/// * [ShimmerDirection.btt] bottom to top direction\n///\nenum ShimmerDirection { ltr, rtl, ttb, btt }\n\n///\n/// A widget renders shimmer effect over [child] widget tree.\n///\n/// [child] defines an area that shimmer effect blends on. You can build [child]\n/// from whatever [Widget] you like but there're some notices in order to get\n/// exact expected effect and get better rendering performance:\n///\n/// * Use static [Widget] (which is an instance of [StatelessWidget]).\n/// * [Widget] should be a solid color element. Every colors you set on these\n/// [Widget]s will be overridden by colors of [gradient].\n/// * Shimmer effect only affects to opaque areas of [child], transparent areas\n/// still stays transparent.\n///\n/// [period] controls the speed of shimmer effect. The default value is 1500\n/// milliseconds.\n///\n/// [direction] controls the direction of shimmer effect. The default value\n/// is [ShimmerDirection.ltr].\n///\n/// [gradient] controls colors of shimmer effect.\n///\n/// [loop] the number of animation loop, set value of `0` to make animation run\n/// forever.\n///\n/// [enabled] controls if shimmer effect is active. When set to false the animation\n/// is paused\n///\n///\n/// ## Pro tips:\n///\n/// * [child] should be made of basic and simple [Widget]s, such as [Container],\n/// [Row] and [Column], to avoid side effect.\n///\n/// * use one [Shimmer] to wrap list of [Widget]s instead of a list of many [Shimmer]s\n///\n@immutable\nclass Shimmer extends StatefulWidget {\n  final Widget child;\n  final Duration period;\n  final ShimmerDirection direction;\n  final Gradient gradient;\n  final int loop;\n  final bool enabled;\n\n  const Shimmer({\n    super.key,\n    required this.child,\n    required this.gradient,\n    this.direction = ShimmerDirection.ltr,\n    this.period = const Duration(milliseconds: 1500),\n    this.loop = 0,\n    this.enabled = true,\n  });\n\n  ///\n  /// A convenient constructor provides an easy and convenient way to create a\n  /// [Shimmer] which [gradient] is [LinearGradient] made up of `baseColor` and\n  /// `highlightColor`.\n  ///\n  Shimmer.fromColors({\n    super.key,\n    required this.child,\n    required Color baseColor,\n    required Color highlightColor,\n    this.period = const Duration(milliseconds: 1500),\n    this.direction = ShimmerDirection.ltr,\n    this.loop = 0,\n    this.enabled = true,\n  }) : gradient = LinearGradient(\n            begin: Alignment.topLeft,\n            end: Alignment.centerRight,\n            colors: <Color>[\n              baseColor,\n              baseColor,\n              highlightColor,\n              baseColor,\n              baseColor\n            ],\n            stops: const <double>[\n              0.0,\n              0.35,\n              0.5,\n              0.65,\n              1.0\n            ]);\n\n  @override\n  _ShimmerState createState() => _ShimmerState();\n\n  @override\n  void debugFillProperties(DiagnosticPropertiesBuilder properties) {\n    super.debugFillProperties(properties);\n    properties.add(DiagnosticsProperty<Gradient>('gradient', gradient,\n        defaultValue: null));\n    properties.add(EnumProperty<ShimmerDirection>('direction', direction));\n    properties.add(\n        DiagnosticsProperty<Duration>('period', period, defaultValue: null));\n    properties\n        .add(DiagnosticsProperty<bool>('enabled', enabled, defaultValue: null));\n    properties.add(DiagnosticsProperty<int>('loop', loop, defaultValue: 0));\n  }\n}\n\nclass _ShimmerState extends State<Shimmer> with SingleTickerProviderStateMixin {\n  late AnimationController _controller;\n  int _count = 0;\n\n  @override\n  void initState() {\n    super.initState();\n    _controller = AnimationController(vsync: this, duration: widget.period)\n      ..addStatusListener((AnimationStatus status) {\n        if (status != AnimationStatus.completed) {\n          return;\n        }\n        _count++;\n        if (widget.loop <= 0) {\n          _controller.repeat();\n        } else if (_count < widget.loop) {\n          _controller.forward(from: 0.0);\n        }\n      });\n    if (widget.enabled) {\n      _controller.forward();\n    }\n  }\n\n  @override\n  void didUpdateWidget(Shimmer oldWidget) {\n    if (widget.enabled) {\n      _controller.forward();\n    } else {\n      _controller.stop();\n    }\n    super.didUpdateWidget(oldWidget);\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return AnimatedBuilder(\n      animation: _controller,\n      child: widget.child,\n      builder: (BuildContext context, Widget? child) => _Shimmer(\n        direction: widget.direction,\n        gradient: widget.gradient,\n        percent: _controller.value,\n        child: child,\n      ),\n    );\n  }\n\n  @override\n  void dispose() {\n    _controller.dispose();\n    super.dispose();\n  }\n}\n\n@immutable\nclass _Shimmer extends SingleChildRenderObjectWidget {\n  final double percent;\n  final ShimmerDirection direction;\n  final Gradient gradient;\n\n  const _Shimmer({\n    super.child,\n    required this.percent,\n    required this.direction,\n    required this.gradient,\n  });\n\n  @override\n  _ShimmerFilter createRenderObject(BuildContext context) {\n    return _ShimmerFilter(percent, direction, gradient);\n  }\n\n  @override\n  void updateRenderObject(BuildContext context, _ShimmerFilter shimmer) {\n    shimmer.percent = percent;\n    shimmer.gradient = gradient;\n    shimmer.direction = direction;\n  }\n}\n\nclass _ShimmerFilter extends RenderProxyBox {\n  ShimmerDirection _direction;\n  Gradient _gradient;\n  double _percent;\n\n  _ShimmerFilter(this._percent, this._direction, this._gradient);\n\n  @override\n  ShaderMaskLayer? get layer => super.layer as ShaderMaskLayer?;\n\n  @override\n  bool get alwaysNeedsCompositing => child != null;\n\n  set percent(double newValue) {\n    if (newValue == _percent) {\n      return;\n    }\n    _percent = newValue;\n    markNeedsPaint();\n  }\n\n  set gradient(Gradient newValue) {\n    if (newValue == _gradient) {\n      return;\n    }\n    _gradient = newValue;\n    markNeedsPaint();\n  }\n\n  set direction(ShimmerDirection newDirection) {\n    if (newDirection == _direction) {\n      return;\n    }\n    _direction = newDirection;\n    markNeedsLayout();\n  }\n\n  @override\n  void paint(PaintingContext context, Offset offset) {\n    if (child != null) {\n      assert(needsCompositing);\n\n      final double width = child!.size.width;\n      final double height = child!.size.height;\n      Rect rect;\n      double dx, dy;\n      if (_direction == ShimmerDirection.rtl) {\n        dx = _offset(width, -width, _percent);\n        dy = 0.0;\n        rect = Rect.fromLTWH(dx - width, dy, 3 * width, height);\n      } else if (_direction == ShimmerDirection.ttb) {\n        dx = 0.0;\n        dy = _offset(-height, height, _percent);\n        rect = Rect.fromLTWH(dx, dy - height, width, 5.5 * height);\n      } else if (_direction == ShimmerDirection.btt) {\n        dx = 0.0;\n        dy = _offset(height, -height, _percent);\n        rect = Rect.fromLTWH(dx, dy - height, width, 5.5 * height);\n      } else {\n        dx = _offset(-width, width, _percent);\n        dy = 0.0;\n        rect = Rect.fromLTWH(dx - width, dy, 4 * width, height);\n      }\n      layer ??= ShaderMaskLayer();\n      layer!\n        ..shader = _gradient.createShader(rect)\n        ..maskRect = offset & size\n        ..blendMode = BlendMode.srcIn;\n      context.pushLayer(layer!, super.paint, offset);\n    } else {\n      layer = null;\n    }\n  }\n\n  double _offset(double start, double end, double percent) {\n    return start + (end - start) * percent;\n  }\n}\n"
      },
      {
        "name": "grid_background.dart",
        "dir": "lib/majestic/ui/grid_background",
        "content": "import 'package:flutter/material.dart';\nimport 'shimmer.dart';\n\nclass GridBackground extends StatelessWidget {\n  final Color gridColor;\n  final Color animationColor;\n  final double gridSpacing;\n  final double lineWidth;\n  final bool shouldAnimate;\n  final Widget? child;\n  final ShimmerDirection shimmerDirection;\n  final Duration duration;\n  final int loop;\n\n  const GridBackground({\n    super.key,\n    this.gridColor = Colors.white30,\n    this.animationColor = Colors.white60,\n    this.gridSpacing = 15.0,\n    this.lineWidth = 0.5,\n    this.child,\n    this.duration = const Duration(milliseconds: 1500),\n    this.shouldAnimate = true,\n    this.shimmerDirection = ShimmerDirection.btt,\n    this.loop = 0,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Stack(\n      children: [\n        shouldAnimate\n            ? Shimmer.fromColors(\n                baseColor: gridColor,\n                highlightColor: animationColor,\n                direction: shimmerDirection,\n                enabled: true,\n                loop: loop,\n                period: duration,\n                child: CustomPaint(\n                  painter: GridPainter(\n                    gridColor: animationColor,\n                    gridSpacing: gridSpacing,\n                    lineWidth: lineWidth,\n                  ),\n                  child: Container(),\n                ),\n              )\n            : CustomPaint(\n                painter: GridPainter(\n                  gridColor: gridColor,\n                  gridSpacing: gridSpacing,\n                  lineWidth: lineWidth,\n                ),\n                child: Container(),\n              ),\n        child ?? const SizedBox.shrink(),\n      ],\n    );\n  }\n}\n\nclass GridPainter extends CustomPainter {\n  final Color gridColor;\n  final double gridSpacing;\n  final double lineWidth;\n\n  GridPainter({\n    required this.gridColor,\n    required this.gridSpacing,\n    required this.lineWidth,\n  });\n\n  @override\n  void paint(Canvas canvas, Size size) {\n    final paint = Paint()\n      ..color = gridColor\n      ..strokeWidth = lineWidth\n      ..style = PaintingStyle.stroke;\n\n    // Calculate number of lines needed\n    final horizontalLines = (size.height / gridSpacing).ceil() + 1;\n    final verticalLines = (size.width / gridSpacing).ceil() + 1;\n\n    // Offset for animation\n    const offset = 0;\n\n    // Draw horizontal lines\n    for (var i = 0; i < horizontalLines; i++) {\n      final y = (i * gridSpacing + offset) % (size.height + gridSpacing) -\n          gridSpacing;\n      paint.color = gridColor;\n      canvas.drawLine(\n        Offset(0, y),\n        Offset(size.width, y),\n        paint,\n      );\n    }\n\n    // Draw vertical lines\n    for (var i = 0; i < verticalLines; i++) {\n      final x =\n          (i * gridSpacing + offset) % (size.width + gridSpacing) - gridSpacing;\n      paint.color = gridColor;\n      canvas.drawLine(\n        Offset(x, 0),\n        Offset(x, size.height),\n        paint,\n      );\n    }\n  }\n\n  @override\n  bool shouldRepaint(GridPainter oldDelegate) {\n    return false;\n  }\n}\n"
      }
    ],
    "dependencies": [],
    "type": "widget",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99"
  },
  {
    "name": "avatar",
    "label": "Avatar",
    "description": "An image element with a fallback for representing the user.",
    "files": [
      {
        "name": "avatar.dart",
        "dir": "lib/majestic/ui",
        "content": "library majestic_avatar;\n\nimport 'dart:math';\n\nimport 'package:cached_network_image/cached_network_image.dart';\nimport 'package:flutter/material.dart';\n\nColor _generateRandomColor() {\n  return Color.fromARGB(\n    255,\n    Random().nextInt(256),\n    Random().nextInt(256),\n    Random().nextInt(256),\n  );\n}\n\n/*\nRULES:\n\n[src] can be\n1. NULL - If it is null, then show background text with random color.\n2. Empty - If it is empty, then show background text with random color.\n3. Network URL - Fetch data from network image.\n4. Asset image - Fetch data using Image.asset.\n\n[isRound vs radius]\n1. isRound and radius, either of those two params are required, not both.\n\n[placeholder]\n\n*/\nclass Avatar extends StatefulWidget {\n  final String? src;\n  final double radius;\n  final String? text;\n  final TextStyle? textStyle;\n  final Color? background;\n  final double? height;\n  final double? width;\n  final BoxFit fit;\n  final bool isRound;\n  final bool useOldImageOnUrlChange;\n\n  const Avatar(\n    this.src, {\n    super.key,\n    this.isRound = false,\n    this.radius = 0,\n    this.height,\n    this.width,\n    this.fit = BoxFit.cover,\n    this.useOldImageOnUrlChange = false,\n    this.text,\n    this.textStyle,\n    this.background,\n  });\n\n  @override\n  State<Avatar> createState() => _CachedImageState();\n}\n\nclass _CachedImageState extends State<Avatar> {\n  Color? _color;\n\n  @override\n  void initState() {\n    super.initState();\n    _color = widget.background ?? _generateRandomColor();\n  }\n\n  Widget _baseBackground(String? text) {\n    return Container(\n      decoration: BoxDecoration(\n        shape: widget.isRound ? BoxShape.circle : BoxShape.rectangle,\n        color: _color,\n      ),\n      height: widget.height,\n      width: widget.width,\n      alignment: Alignment.center,\n      child: text != null\n          ? LayoutBuilder(\n              builder: (context, constraints) {\n                double fontSize =\n                    min(constraints.maxWidth, constraints.maxHeight) * 0.5;\n                return Text(\n                  text[0].toUpperCase(),\n                  style: TextStyle(\n                    fontSize: fontSize,\n                    fontWeight: FontWeight.w500,\n                    color: _color!.computeLuminance() > .5\n                        ? Colors.black\n                        : Colors.white,\n                  ),\n                );\n              },\n            )\n          : const SizedBox.shrink(),\n    );\n  }\n\n  Widget _getChild() {\n    if (widget.src == null) {\n      return _baseBackground(widget.text);\n    }\n    return CachedNetworkImage(\n      imageUrl: widget.src!,\n      fit: widget.fit,\n      useOldImageOnUrlChange: widget.useOldImageOnUrlChange,\n      placeholder: (context, url) => _baseBackground(widget.text),\n      errorWidget: (context, url, error) {\n        print(error);\n        return Container(\n          height: widget.height,\n          width: widget.width,\n          color: Colors.black,\n        );\n      },\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return SizedBox(\n      height: widget.height,\n      width: widget.width,\n      child: ClipRRect(\n        borderRadius: widget.isRound\n            ? BorderRadius.circular(300)\n            : BorderRadius.circular(widget.radius),\n        child: _getChild(),\n      ),\n    );\n  }\n}\n"
      }
    ],
    "dependencies": [
      "cached_network_image"
    ],
    "type": "widget",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99",
    "demo": "import 'package:flutter/material.dart';\n\nimport 'majestic/ui/avatar.dart';\n\nclass MajesticAvatarDemo extends StatelessWidget {\n  const MajesticAvatarDemo({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const Scaffold(\n      body: Center(\n        child: Column(\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            Avatar(\n              \"https://picsum.photos/50\",\n              isRound: true,\n              height: 50,\n              width: 50,\n              radius: 2,\n              text: \"Ronak\",\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "landing_page",
    "label": "Landing Page",
    "description": "A landing page with Salomon Bottom Navigation bar and state management.",
    "files": [
      {
        "name": "landing_page.dart",
        "dir": "lib/majestic/ui/landing_page",
        "content": "import 'package:flutter/material.dart';\nimport 'package:salomon_bottom_bar/salomon_bottom_bar.dart';\nimport 'package:provider/provider.dart';\n\nimport './provider/landing_page_state_provider.dart';\nimport './config/landing_page_config.dart';\n\nclass LandingPage extends StatelessWidget {\n  const LandingPage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return ChangeNotifierProvider(\n      create: (_) => LandingPageStateProvider(),\n      builder: (context, _) {\n        final landingPageProvider =\n            Provider.of<LandingPageStateProvider>(context);\n\n        return Scaffold(\n          body: landingPageList[landingPageProvider.selectedIndex],\n          bottomNavigationBar: SalomonBottomBar(\n            currentIndex: landingPageProvider.selectedIndex,\n            onTap: landingPageProvider.onTabChange,\n            items: [\n              /// Home\n              SalomonBottomBarItem(\n                icon: const Icon(Icons.home),\n                title: const Text(\"Home\"),\n                selectedColor: Colors.purple,\n              ),\n\n              /// Likes\n              SalomonBottomBarItem(\n                icon: const Icon(Icons.favorite_border),\n                title: const Text(\"Likes\"),\n                selectedColor: Colors.pink,\n              ),\n\n              /// Search\n              SalomonBottomBarItem(\n                icon: const Icon(Icons.search),\n                title: const Text(\"Search\"),\n                selectedColor: Colors.orange,\n              ),\n\n              /// Profile\n              SalomonBottomBarItem(\n                icon: const Icon(Icons.person),\n                title: const Text(\"Profile\"),\n                selectedColor: Colors.teal,\n              ),\n            ],\n          ),\n        );\n      },\n    );\n  }\n}\n"
      },
      {
        "name": "landing_page_config.dart",
        "dir": "lib/majestic/ui/landing_page/config",
        "content": "import '../pages/home_page.dart';\n\n/// This is where you are supposed to specify all of your pages.\nconst landingPageList = [\n  DemoPage(\n    title: \"Home\",\n    subtitle: \"Home\",\n  ),\n  DemoPage(\n    title: \"Likes\",\n    subtitle: \"Likes\",\n  ),\n  DemoPage(\n    title: \"Search\",\n    subtitle: \"Search\",\n  ),\n  DemoPage(\n    title: \"Profile\",\n    subtitle: \"Profile\",\n  ),\n];\n"
      },
      {
        "name": "landing_page_state_provider.dart",
        "dir": "lib/majestic/ui/landing_page/provider",
        "content": "import 'package:flutter/material.dart';\n\nclass LandingPageStateProvider extends ChangeNotifier {\n  int _selectedIndex = 0;\n  int get selectedIndex => _selectedIndex;\n\n  void onTabChange(int i) {\n    _selectedIndex = i;\n    notifyListeners();\n  }\n}\n"
      },
      {
        "name": "home_page.dart",
        "dir": "lib/majestic/ui/landing_page/pages",
        "content": "import 'package:flutter/material.dart';\n\nclass DemoPage extends StatelessWidget {\n  final String title;\n  final String subtitle;\n  const DemoPage({super.key, required this.title, required this.subtitle});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(centerTitle: true, title: Text(title)),\n      body: Center(\n        child: Text(subtitle),\n      ),\n    );\n  }\n}\n"
      }
    ],
    "dependencies": [
      "provider",
      "salomon_bottom_bar"
    ],
    "type": "page",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99"
  },
  {
    "name": "categories_page",
    "label": "Categories Page",
    "description": "Categories Page with baked in state management.",
    "files": [
      {
        "name": "categories_page.dart",
        "dir": "lib/majestic/ui/categories_page",
        "content": "import 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\n\nimport './state/categories_state_provider.dart';\nimport './ui/sections/main/categories_main_view.dart';\nimport './utils/dimensions.dart';\nimport './ui/sections/left/categories_left_panel.dart';\n\nclass CategoriesPage extends StatelessWidget {\n  const CategoriesPage({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: SizedBox(\n        child: ChangeNotifierProvider(\n          create: (_) => CategoriesStateProvider(),\n          child: const Stack(\n            children: [\n              Row(\n                children: [\n                  SizedBox(width: leftPanelWidth),\n                  Expanded(\n                    child: CategoriesMainPanel(),\n                  ),\n                ],\n              ),\n              CategoriesLeftPanel(),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
      },
      {
        "name": "categories_left_panel.dart",
        "dir": "lib/majestic/ui/categories_page/ui/sections/left",
        "content": "import 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\n\nimport '../../../state/categories_state_provider.dart';\nimport '../../../utils/dimensions.dart';\nimport '../../../utils/colors.dart';\n\nclass CategoriesLeftPanel extends StatelessWidget {\n  const CategoriesLeftPanel({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final categoriesStateProvider =\n        Provider.of<CategoriesStateProvider>(context);\n\n    final safeArePaddingTop = MediaQuery.of(context).padding.top;\n\n    const double imageSize = 50;\n    const double itemHeight = 104;\n    const double handleWidth = 5;\n\n    return Container(\n      width: leftPanelWidth,\n      decoration: BoxDecoration(\n        color: Colors.white,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.grey[300]!,\n            offset: const Offset(1, 0),\n            blurRadius: 2,\n          )\n        ],\n      ),\n      child: Stack(\n        children: [\n          ListView(\n            children: categoriesStateProvider.allCategories\n                .map(\n                  (categoryItem) => Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                    children: [\n                      Expanded(\n                        child: GestureDetector(\n                          onTap: () => categoriesStateProvider\n                              .updateCategory(categoryItem),\n                          child: Container(\n                            height: itemHeight,\n                            color: Colors.transparent,\n                            child: Column(\n                              mainAxisSize: MainAxisSize.min,\n                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                              children: [\n                                Container(\n                                  decoration: BoxDecoration(\n                                    color: categoriesStateProvider\n                                                .selectedCategory ==\n                                            categoryItem\n                                        ? const Color(0xffceffda)\n                                        : lightBackgroundColor,\n                                    shape: BoxShape.circle,\n                                  ),\n                                  height: imageSize,\n                                  width: imageSize,\n                                  margin: const EdgeInsets.only(bottom: 4),\n                                ),\n                                Text(\n                                  categoryItem.name,\n                                  textAlign: TextAlign.center,\n                                  style: TextStyle(\n                                    height: 1.1,\n                                    fontWeight: categoriesStateProvider\n                                                .selectedCategory ==\n                                            categoryItem\n                                        ? FontWeight.w600\n                                        : FontWeight.normal,\n                                    fontSize: 11,\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                )\n                .toList(),\n          ),\n          // if (categoriesStateProvider.isAnimating)\n          //   AnimatedPositioned(\n          //     right: 0,\n          //     top: (itemHeight *\n          //             categoriesStateProvider.getSelectedCategoryIndex) +\n          //         safeArePaddingTop,\n          //     duration: const Duration(milliseconds: 300),\n          //     curve: Curves.easeInOut,\n          //     child: Container(\n          //       height: itemHeight,\n          //       width: handleWidth,\n          //       decoration: BoxDecoration(\n          //         color: Colors.green[800],\n          //         borderRadius: const BorderRadius.horizontal(\n          //           left: Radius.circular(12),\n          //         ),\n          //       ),\n          //     ),\n          //   ),\n        ],\n      ),\n    );\n  }\n}\n"
      },
      {
        "name": "categories_main_view.dart",
        "dir": "lib/majestic/ui/categories_page/ui/sections/main",
        "content": "import 'package:flutter/material.dart';\n\nimport '../../../data/data.dart';\nimport '../../../models/product.dart';\nimport '../../../utils/colors.dart';\nimport '../../../utils/dimensions.dart';\n\nclass CategoriesMainPanel extends StatelessWidget {\n  const CategoriesMainPanel({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return SafeArea(\n      child: Container(\n        width: double.infinity,\n        color: const Color(0xfffffefe),\n        child: Column(\n          children: [\n            _buildFilters(),\n            const Expanded(\n              child: ProductGrid(),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  Widget _buildFilters() {\n    return SingleChildScrollView(\n      scrollDirection: Axis.horizontal,\n      padding: const EdgeInsets.symmetric(\n          vertical: 4, horizontal: defaultViewPadding),\n      child: Row(\n          children: filters\n              .map(\n                (item) => Container(\n                  margin: const EdgeInsets.only(right: 12),\n                  decoration: BoxDecoration(\n                    color: Colors.white,\n                    boxShadow: [\n                      BoxShadow(\n                        color: Colors.grey[400]!,\n                        offset: const Offset(0, 0),\n                        blurRadius: 2,\n                      )\n                    ],\n                    borderRadius: BorderRadius.circular(8),\n                  ),\n                  padding: EdgeInsets.only(\n                    left: 12,\n                    right: item.isDropdown ? 4 : 12,\n                    top: item.isDropdown ? 2 : 4,\n                    bottom: item.isDropdown ? 2 : 4,\n                  ),\n                  child: Row(\n                    children: [\n                      Text(\n                        item.label,\n                        style: const TextStyle(\n                          fontWeight: FontWeight.w500,\n                        ),\n                      ),\n                      if (item.isDropdown)\n                        const Icon(\n                          Icons.arrow_drop_down,\n                          size: 24,\n                        ),\n                    ],\n                  ),\n                ),\n              )\n              .toList()),\n    );\n  }\n}\n\nclass ProductGrid extends StatelessWidget {\n  const ProductGrid({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final viewWidth = MediaQuery.of(context).size.width -\n        leftPanelWidth -\n        (defaultViewPadding * 2);\n\n    return GridView.builder(\n      padding: const EdgeInsets.all(defaultViewPadding),\n      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\n        crossAxisCount: 2,\n        childAspectRatio: 0.6,\n        crossAxisSpacing: 8,\n        mainAxisSpacing: 6,\n      ),\n      itemBuilder: (context, index) =>\n          ProductCard(product: dummyProducts[index]),\n      itemCount: dummyProducts.length,\n    );\n  }\n}\n\nclass ProductCard extends StatelessWidget {\n  final Product product;\n\n  const ProductCard({\n    super.key,\n    required this.product,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(12),\n        color: Colors.white,\n      ),\n      child: LayoutBuilder(builder: (context, constraints) {\n        return SingleChildScrollView(\n          // Add scrolling if needed\n          child: Column(\n            mainAxisSize: MainAxisSize.min, // Use minimum space needed\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              // Image section with aspect ratio\n              ClipRRect(\n                borderRadius: const BorderRadius.all(Radius.circular(12)),\n                child: Container(\n                  width: double.infinity,\n                  height: 120,\n                  color: lightBackgroundColor,\n                  // child: Image.network(\n                  //   product.imageUrl,\n                  //   fit: BoxFit.cover,\n                  // ),\n                ),\n              ),\n              const SizedBox(height: 8),\n              // Product details section\n              Column(\n                mainAxisSize: MainAxisSize.min, // Use minimum space needed\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Row(\n                    children: [\n                      CustomChip(text: '${product.weight}g'),\n                      const SizedBox(width: 4),\n                      const CustomChip(text: 'Chocolate Chip'),\n                    ],\n                  ),\n                  const SizedBox(height: 4),\n                  Text(\n                    product.name,\n                    maxLines: 2,\n                    overflow: TextOverflow.ellipsis,\n                    style: const TextStyle(\n                      fontSize: 12,\n                      fontWeight: FontWeight.w500,\n                    ),\n                  ),\n                  const SizedBox(height: 2),\n                  // Rating row\n                  Row(\n                    children: [\n                      ...List.generate(\n                        5,\n                        (e) => const Icon(\n                          Icons.star,\n                          size: 14,\n                          color: Colors.amber,\n                        ),\n                      ),\n                      const SizedBox(width: 4),\n                      const Text(\n                        '(30,895)',\n                        style: TextStyle(fontSize: 10),\n                      ),\n                    ],\n                  ),\n                  const SizedBox(height: 4),\n                  // Delivery time row\n                  Row(\n                    children: [\n                      Icon(\n                        Icons.access_time,\n                        size: 10,\n                        color: Colors.green[800]!,\n                      ),\n                      Text(\n                        ' ${product.deliveryTime} MINS',\n                        style: TextStyle(\n                          color: Colors.grey[800],\n                          fontSize: 8,\n                          fontWeight: FontWeight.w600,\n                        ),\n                      ),\n                    ],\n                  ),\n                  const SizedBox(height: 8),\n                  // Price row\n                  Row(\n                    children: [\n                      Expanded(\n                        child: FittedBox(\n                          fit: BoxFit.scaleDown,\n                          alignment: Alignment.centerLeft,\n                          child: Row(\n                            children: [\n                              Text(\n                                '\u20b9${product.price}',\n                                style: const TextStyle(\n                                  fontWeight: FontWeight.bold,\n                                  fontSize: 14,\n                                ),\n                              ),\n                              const SizedBox(width: 4),\n                              Text(\n                                'MRP ',\n                                style: TextStyle(\n                                  color: Colors.grey[700],\n                                  fontSize: 10,\n                                  fontWeight: FontWeight.w300,\n                                ),\n                              ),\n                              Text(\n                                '\u20b9${product.mrp}',\n                                style: TextStyle(\n                                  decoration: TextDecoration.lineThrough,\n                                  color: Colors.grey[700],\n                                  fontSize: 10,\n                                  fontWeight: FontWeight.w300,\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ],\n              ),\n            ],\n          ),\n        );\n      }),\n    );\n  }\n}\n\nclass CustomChip extends StatelessWidget {\n  final String text;\n\n  const CustomChip({super.key, required this.text});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(6),\n        color: lightBackgroundColor,\n      ),\n      padding: const EdgeInsets.all(4),\n      child: Text(\n        text,\n        style: TextStyle(\n          color: Colors.blue[900],\n          fontWeight: FontWeight.w700,\n          fontSize: 9,\n        ),\n      ),\n    );\n  }\n}\n"
      },
      {
        "name": "category_gridview_item.dart",
        "dir": "lib/majestic/ui/categories_page/ui/sections/main/widgets",
        "content": ""
      },
      {
        "name": "colors.dart",
        "dir": "lib/majestic/ui/categories_page/utils",
        "content": "import 'dart:ui';\n\nconst lightBackgroundColor = const Color(0xfff3f5f7);\n"
      },
      {
        "name": "dimensions.dart",
        "dir": "lib/majestic/ui/categories_page/utils",
        "content": "const double leftPanelWidth = 78;\nconst double defaultViewPadding = 12;\n"
      },
      {
        "name": "product.dart",
        "dir": "lib/majestic/ui/categories_page/models",
        "content": "class Product {\n  final String name;\n  final String imageUrl;\n  final double price;\n  final double mrp;\n  final double weight;\n  final String? pieceCount;\n  final double rating;\n  final int reviewCount;\n  final int deliveryTime;\n  final double discount;\n  final bool isPremium;\n\n  Product({\n    required this.name,\n    required this.imageUrl,\n    required this.price,\n    required this.mrp,\n    required this.weight,\n    this.pieceCount,\n    required this.rating,\n    required this.reviewCount,\n    required this.deliveryTime,\n    required this.discount,\n    this.isPremium = false,\n  });\n}\n"
      },
      {
        "name": "category_item.dart",
        "dir": "lib/majestic/ui/categories_page/models",
        "content": "class CategoryItem {\n  final String image;\n  final String name;\n  final String id;\n\n  CategoryItem({required this.image, required this.name, required this.id});\n}\n"
      },
      {
        "name": "filter.dart",
        "dir": "lib/majestic/ui/categories_page/models",
        "content": "enum FilterType { dropdown, normal }\n\nclass Filter {\n  String label;\n  String value;\n  FilterType filterType;\n\n  Filter({\n    required this.label,\n    required this.value,\n    required this.filterType,\n  });\n\n  bool get isDropdown => filterType == FilterType.dropdown;\n}\n"
      },
      {
        "name": "categories_state_provider.dart",
        "dir": "lib/majestic/ui/categories_page/state",
        "content": "import 'package:flutter/material.dart';\n\nimport '../data/data.dart';\nimport '../models/category_item.dart';\n\nclass CategoriesStateProvider extends ChangeNotifier {\n  List<CategoryItem> _allCategories = [];\n  List<CategoryItem> get allCategories => _allCategories;\n\n  late CategoryItem _selectedCategory;\n  CategoryItem get selectedCategory => _selectedCategory;\n\n  bool isAnimating = false;\n\n  CategoriesStateProvider() {\n    _initialize();\n  }\n\n  void _initialize() async {\n    _allCategories = categoryItems;\n    _selectedCategory = _allCategories.first;\n    notifyListeners();\n  }\n\n  void updateCategory(CategoryItem categoryItem) {\n    _selectedCategory = categoryItem;\n    notifyListeners();\n  }\n\n  int get getSelectedCategoryIndex => allCategories.indexOf(selectedCategory);\n}\n"
      },
      {
        "name": "data.dart",
        "dir": "lib/majestic/ui/categories_page/data",
        "content": "import '../models/category_item.dart';\nimport '../models/filter.dart';\nimport '../models/product.dart';\n\nfinal categoryItems = <CategoryItem>[\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'All',\n    id: 'all',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Fresh Vegetables',\n    id: 'fresh_vegetables',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Fresh Fruits',\n    id: 'fruits',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Exotics',\n    id: 'exotics',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Coriander & Others',\n    id: 'others',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Flowers & Leaves',\n    id: 'flowers',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Seasonal',\n    id: 'seasonal',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Freshly Cut & Sprouts',\n    id: 'cut_and_sprouts',\n  ),\n  CategoryItem(\n    image: 'https://picsum.photos/50',\n    name: 'Frozen Veg',\n    id: 'frozen_veg',\n  ),\n];\n\n// Dummy data for demonstration\nfinal dummyProducts = [\n  Product(\n    name:\n        'Cadbury Studio Assorted Flavours Signature Pralines Chocolate Gift Pack',\n    imageUrl: 'https://picsum.photos/180',\n    price: 716,\n    mrp: 1000,\n    weight: 234,\n    pieceCount: '18',\n    rating: 4.2,\n    reviewCount: 224,\n    deliveryTime: 10,\n    discount: 28,\n    isPremium: true,\n  ),\n  Product(\n    name: 'Kinder Schoko Bons Crispy',\n    imageUrl: 'https://example.com/chocolate2.jpg',\n    price: 37,\n    mrp: 40,\n    weight: 22.4,\n    rating: 4.8,\n    reviewCount: 5690,\n    deliveryTime: 10,\n    discount: 7,\n  ),\n  Product(\n    name:\n        'Cadbury Studio Assorted Flavours Signature Pralines Chocolate Gift Pack',\n    imageUrl: 'https://example.com/chocolate1.jpg',\n    price: 716,\n    mrp: 1000,\n    weight: 234,\n    pieceCount: '18',\n    rating: 4.2,\n    reviewCount: 224,\n    deliveryTime: 10,\n    discount: 28,\n    isPremium: true,\n  ),\n  Product(\n    name: 'Kinder Schoko Bons Crispy',\n    imageUrl: 'https://example.com/chocolate2.jpg',\n    price: 37,\n    mrp: 40,\n    weight: 22.4,\n    rating: 4.8,\n    reviewCount: 5690,\n    deliveryTime: 10,\n    discount: 7,\n  ),\n  Product(\n    name:\n        'Cadbury Studio Assorted Flavours Signature Pralines Chocolate Gift Pack',\n    imageUrl: 'https://example.com/chocolate1.jpg',\n    price: 716,\n    mrp: 1000,\n    weight: 234,\n    pieceCount: '18',\n    rating: 4.2,\n    reviewCount: 224,\n    deliveryTime: 10,\n    discount: 28,\n    isPremium: true,\n  ),\n  Product(\n    name: 'Kinder Schoko Bons Crispy',\n    imageUrl: 'https://example.com/chocolate2.jpg',\n    price: 37,\n    mrp: 40,\n    weight: 22.4,\n    rating: 4.8,\n    reviewCount: 5690,\n    deliveryTime: 10,\n    discount: 7,\n  ),\n];\n\n// Filter\nfinal filters = [\n  Filter(label: 'Filter', value: 'filter', filterType: FilterType.dropdown),\n  Filter(label: 'Sort', value: 'sort', filterType: FilterType.dropdown),\n  Filter(label: 'Brand', value: 'brand', filterType: FilterType.normal),\n  Filter(label: 'More', value: 'more', filterType: FilterType.dropdown),\n];\n"
      }
    ],
    "dependencies": [
      "provider"
    ],
    "type": "page",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99"
  },
  {
    "name": "onboarding_page",
    "label": "Onboarding Page",
    "description": "Beautiful onboarding page for you to quickly get started.",
    "files": [
      {
        "name": "onboarding_page.dart",
        "dir": "lib/majestic/ui/onboarding_page",
        "content": "import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:onboarding_page/widgets/app_logo.dart';\n\nimport './models/onboarding_item.dart';\nimport 'widgets/action_button.dart';\nimport 'widgets/mascot_and_detail_container.dart';\nimport 'widgets/pageview_bullets.dart';\n\nconst _splashScreenBgAnimationDuration = 800;\n\nclass OnboardingPage extends StatefulWidget {\n  final VoidCallback onActionButtonTap;\n  const OnboardingPage({super.key, required this.onActionButtonTap});\n\n  @override\n  State<OnboardingPage> createState() => _OnboardingPageState();\n}\n\nclass _OnboardingPageState extends State<OnboardingPage> {\n  final PageController _pageController = PageController();\n  int _currentPage = 0;\n  final double _currentPageTracker = 0;\n\n  final double _offset = 85;\n\n  @override\n  void initState() {\n    super.initState();\n\n    setIsLoggedInToFalse();\n\n    _pageController.addListener(() {\n      double maxScrollExtent = _pageController.position.maxScrollExtent;\n      double scrollExtentPerSection = maxScrollExtent / 4;\n\n      double scrollPosition = _pageController.position.pixels;\n\n      if (scrollPosition > scrollExtentPerSection * 3) {\n        setState(() {\n          _currentPage = 3;\n        });\n      } else if (scrollPosition >\n          scrollExtentPerSection + scrollExtentPerSection / 2) {\n        setState(() {\n          _currentPage = 2;\n        });\n      } else if (scrollPosition > scrollExtentPerSection / 2) {\n        setState(() {\n          _currentPage = 1;\n        });\n      } else {\n        setState(() {\n          _currentPage = 0;\n        });\n      }\n    });\n  }\n\n  setIsLoggedInToFalse() async {\n    // SharedPreferences prefs = await SharedPreferences.getInstance();\n    // prefs.setBool('is_logged_in', false);\n  }\n\n  _setHasShownWelcomeScreenToTrue() async {\n    // SharedPreferences prefs = await SharedPreferences.getInstance();\n    // prefs.setBool('has_shown_welcome_screen', true);\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    const logoEntry = _splashScreenBgAnimationDuration;\n    const getStartedButtonEntry = logoEntry + 1500;\n    const featureTextEntry = getStartedButtonEntry + 800;\n    final height = MediaQuery.of(context).size.height;\n\n    final List<OnboardingItem> onboardingItemList = [\n      OnboardingItem(\n        id: 'feature_one',\n        title: 'Discover & Connect',\n        subtitle: 'Explore new possibilities and stay connected effortlessly.',\n        assetImage:\n            'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/discovery.svg',\n        primaryColor: const Color(0xffff725e),\n      ),\n      OnboardingItem(\n        id: 'feature_two',\n        title: 'Flexibility at Your Fingertips',\n        subtitle: 'Use the app the way you want, anytime, anywhere.',\n        assetImage:\n            'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/fingertips.svg',\n        primaryColor: const Color(0xff92e3a9),\n      ),\n      OnboardingItem(\n        id: 'feature_three',\n        title: 'Optimize & Grow',\n        subtitle:\n            'Leverage smart tools to enhance your experience and performance.',\n        assetImage:\n            'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/grow.svg',\n        primaryColor: const Color(0xffba68c8),\n      ),\n      OnboardingItem(\n        id: 'feature_four',\n        title: 'Seamless Transactions',\n        subtitle:\n            'Manage your activities with ease and get things done faster.',\n        assetImage:\n            'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/money.svg',\n        primaryColor: const Color(0xff407bfe),\n      ),\n    ];\n\n    return AnnotatedRegion<SystemUiOverlayStyle>(\n      value: const SystemUiOverlayStyle(\n        statusBarColor: Colors.transparent,\n        statusBarIconBrightness: Brightness.dark,\n        systemNavigationBarIconBrightness: Brightness.dark,\n        systemNavigationBarColor: Colors.white,\n      ),\n      child: Scaffold(\n        body: Container(\n          decoration: const BoxDecoration(\n            color: Colors.white,\n          ),\n          width: double.infinity,\n          height: height,\n          child: Stack(\n            children: [\n              AnimatedContainer(\n                duration: const Duration(milliseconds: 300),\n                color: onboardingItemList[_currentPage]\n                    .primaryColor\n                    .withOpacity(.2),\n              ),\n              Column(\n                children: [\n                  Expanded(\n                    child: PageView(\n                      physics: const ClampingScrollPhysics(),\n                      scrollBehavior: DisabledGlowBehaviour(),\n                      controller: _pageController,\n                      children: onboardingItemList\n                          .map(\n                            (e) => MascotAndDetailContainer(\n                              welcomeScreenEntity: e,\n                            ),\n                          )\n                          .toList(),\n                    ),\n                  ),\n                  Container(\n                    margin:\n                        const EdgeInsets.only(left: 25, right: 25, bottom: 25),\n                    child: Row(\n                      children: [\n                        PageViewBullets(\n                          pageViewItemListLength: onboardingItemList.length,\n                          selectedPageIndex: _currentPage,\n                          primaryColor:\n                              onboardingItemList[_currentPage].primaryColor,\n                        ),\n                        const Spacer(),\n                        ActionButton(\n                          color: onboardingItemList[_currentPage].primaryColor,\n                          onPressed: () {\n                            if (_currentPage == 3) {\n                              widget.onActionButtonTap();\n                            } else {\n                              _pageController.nextPage(\n                                duration: const Duration(milliseconds: 300),\n                                curve: Curves.easeInOut,\n                              );\n                            }\n                          },\n                        ),\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n              const AppLogo()\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass DisabledGlowBehaviour extends ScrollBehavior {\n  @override\n  Widget buildOverscrollIndicator(BuildContext context, Widget child, _) {\n    return child;\n  }\n}\n"
      },
      {
        "name": "onboarding_item.dart",
        "dir": "lib/majestic/ui/onboarding_page/models",
        "content": "import 'dart:ui';\n\nclass OnboardingItem {\n  final String id;\n  final String title;\n  final String subtitle;\n  final String assetImage;\n  final Color primaryColor;\n\n  OnboardingItem({\n    required this.id,\n    required this.title,\n    required this.subtitle,\n    required this.assetImage,\n    required this.primaryColor,\n  });\n}\n"
      },
      {
        "name": "action_button.dart",
        "dir": "lib/majestic/ui/onboarding_page/widgets",
        "content": "import 'package:flutter/material.dart';\n\nclass ActionButton extends StatelessWidget {\n  final Color color;\n  final VoidCallback onPressed;\n\n  const ActionButton({\n    super.key,\n    required this.color,\n    required this.onPressed,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return GestureDetector(\n      onTap: onPressed,\n      child: AnimatedContainer(\n        duration: const Duration(milliseconds: 350),\n        curve: Curves.easeInOut,\n        decoration: BoxDecoration(\n          shape: BoxShape.circle,\n          color: color,\n        ),\n        padding: const EdgeInsets.all(15),\n        child: const Icon(\n          Icons.arrow_forward,\n          color: Colors.white,\n        ),\n      ),\n    );\n  }\n}\n"
      },
      {
        "name": "mascot_and_detail_container.dart",
        "dir": "lib/majestic/ui/onboarding_page/widgets",
        "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_svg/flutter_svg.dart';\n\nimport '../models/onboarding_item.dart';\n\nclass MascotAndDetailContainer extends StatelessWidget {\n  final OnboardingItem welcomeScreenEntity;\n\n  const MascotAndDetailContainer({\n    super.key,\n    required this.welcomeScreenEntity,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        SizedBox(\n          height: MediaQuery.of(context).padding.top + 24,\n        ),\n        Flexible(\n          flex: 6,\n          child: Container(\n            padding: const EdgeInsets.only(top: 30),\n            child: SvgPicture.network(\n              welcomeScreenEntity.assetImage,\n              height: double.infinity,\n            ),\n          ),\n        ),\n        Flexible(\n          flex: 4,\n          child: Padding(\n            padding: const EdgeInsets.only(left: 25, right: 60, top: 40),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  welcomeScreenEntity.title,\n                  style: const TextStyle(\n                    fontSize: 30,\n                    fontWeight: FontWeight.w800,\n                    color: Colors.black,\n                  ),\n                ),\n                const SizedBox(height: 30),\n                Text(\n                  welcomeScreenEntity.subtitle,\n                  style: const TextStyle(\n                    fontSize: 17,\n                    fontWeight: FontWeight.w400,\n                    color: Colors.black45,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n"
      },
      {
        "name": "app_logo.dart",
        "dir": "lib/majestic/ui/onboarding_page/widgets",
        "content": "import 'package:flutter/material.dart';\n\nclass AppLogo extends StatelessWidget {\n  const AppLogo({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: EdgeInsets.only(top: MediaQuery.of(context).padding.top + 12),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          SizedBox(\n            height: 35,\n            width: 35,\n            child: Image.network(\n                'https://raw.githubusercontent.com/Ronak99/majestic-ui-flutter/refs/heads/master/assets/logo-small.png'),\n          ),\n          const SizedBox(width: 8),\n          const Text(\n            'Majestic UI',\n            style: TextStyle(\n              color: Colors.black,\n              fontWeight: FontWeight.w700,\n              fontSize: 28,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"
      },
      {
        "name": "pageview_bullets.dart",
        "dir": "lib/majestic/ui/onboarding_page/widgets",
        "content": "import 'package:flutter/material.dart';\n\nclass PageViewBullets extends StatelessWidget {\n  final int pageViewItemListLength;\n  final int selectedPageIndex;\n  final Color primaryColor;\n\n  const PageViewBullets({\n    super.key,\n    required this.pageViewItemListLength,\n    required this.selectedPageIndex,\n    required this.primaryColor,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      decoration: BoxDecoration(\n        color: Colors.white,\n        boxShadow: const [\n          BoxShadow(\n            color: Colors.black12,\n            blurRadius: 2,\n            offset: Offset.zero,\n          )\n        ],\n        borderRadius: BorderRadius.circular(12),\n      ),\n      padding: const EdgeInsets.all(12),\n      child: Row(\n        children: List.generate(pageViewItemListLength, (index) => index)\n            .map(\n              (e) => AnimatedContainer(\n                duration: const Duration(milliseconds: 100),\n                margin: EdgeInsets.only(\n                  right: e == pageViewItemListLength - 1 ? 0 : 8,\n                ),\n                decoration: BoxDecoration(\n                  shape: BoxShape.circle,\n                  color: e == selectedPageIndex\n                      ? primaryColor\n                      : const Color(0xffd9d9d9),\n                ),\n                height: 8,\n                width: 8,\n              ),\n            )\n            .toList(),\n      ),\n    );\n  }\n}\n"
      }
    ],
    "dependencies": [
      "flutter_svg"
    ],
    "type": "page",
    "author": "Ronak99",
    "github": "https://github.com/Ronak99"
  }
]